// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  role     String  
  contactNo String
  address   String
  profileImg String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  reviewsAndRatings ReviewAndRating[]
  orders Order[]

  @@map("users")
}

model Category {
  id    String @id @default(uuid())
  title String @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  books  Book[]

  @@map("categories")
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           String
  publicationDate String
  categoryId      String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  category        Category @relation(fields: [categoryId], references: [id])
  reviewsAndRatings ReviewAndRating[]
  orderedBooks OrderedBook[] 
  

  @@map("books")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  userId String
  bookId String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  users   User   @relation(fields: [userId], references: [id])
  books   Book   @relation(fields: [bookId], references: [id])

  @@map("reviewandratings")
}

model OrderedBook {
  id        String   @id @default(uuid())
  orderId   String
  bookId    String
  quantity  Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])

  @@map("orderbooks")
}

model Order {
  id           String        @id @default(uuid())
  userId       String
  orderedBooks OrderedBook[] 
  status       String        @default("pending")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id])

  @@map("orders")
}



